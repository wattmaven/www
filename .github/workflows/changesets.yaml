name: changesets

on:
  push:
    branches:
      - main

concurrency: ${{ github.workflow }}-${{ github.ref }}

jobs:
  version:
    runs-on: ubuntu-latest
    permissions: write-all
    outputs:
      published: ${{ steps.changesets.outputs.published }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: cache turbo build setup
        uses: actions/cache@6849a6489940f00c2f30c0fb92c6274307ccb58a # v4
        with:
          path: .turbo
          key: ${{ runner.os }}-turbo-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-turbo-

      - uses: pnpm/action-setup@v4
        with:
          version: 9.7.0
          run_install: false
      - uses: actions/setup-node@39370e3970a6d050c480ffad4ff0ed4d3fdee5af # v4
        with:
          node-version: 20
          cache: pnpm

      - name: get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@6849a6489940f00c2f30c0fb92c6274307ccb58a # v4
        name: setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - run: pnpm i

      - name: create release pull request
        id: changesets
        uses: changesets/action@v1
        with:
          version: pnpm ci:version
          publish: pnpm ci:publish
          commit: "chore: update versions"
          title: "chore: update versions"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.GH_PRIVATE_NPM_TOKEN }}

  deploy-production:
    needs: [version]
    if: needs.version.outputs.published == 'true'
    runs-on: ubuntu-latest
    environment: production
    env:
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: cache turbo build setup
        uses: actions/cache@6849a6489940f00c2f30c0fb92c6274307ccb58a # v4
        with:
          path: .turbo
          key: ${{ runner.os }}-turbo-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-turbo-

      - uses: pnpm/action-setup@v4
        with:
          version: 9.7.0
          run_install: false
      - uses: actions/setup-node@39370e3970a6d050c480ffad4ff0ed4d3fdee5af # v4
        with:
          node-version: 20
          cache: pnpm

      - name: get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@6849a6489940f00c2f30c0fb92c6274307ccb58a # v4
        name: setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - run: pnpm i

      - name: install vercel CLI
        run: pnpm i -g vercel

      - name: pull www Vercel environment information
        env:
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_WWW_PROJECT_ID }}
        run: vercel pull --yes --environment=production --scope=wattmaven --token=${{ secrets.VERCEL_TOKEN }}

      - name: copy Vercel environment variables
        run: cp .vercel/.env.production.local .env.production.local

      - name: build project artifacts
        run: vercel build --prod

      - name: deploy project artifacts to Vercel
        env:
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_WWW_PROJECT_ID }}
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}
